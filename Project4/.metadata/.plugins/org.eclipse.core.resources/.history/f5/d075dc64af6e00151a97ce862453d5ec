/*
 * Copyright (c) 2009 Xilinx, Inc.  All rights reserved.
 *
 * Xilinx, Inc.
 * XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION "AS IS" AS A
 * COURTESY TO YOU.  BY PROVIDING THIS DESIGN, CODE, OR INFORMATION AS
 * ONE POSSIBLE   IMPLEMENTATION OF THIS FEATURE, APPLICATION OR
 * STANDARD, XILINX IS MAKING NO REPRESENTATION THAT THIS IMPLEMENTATION
 * IS FREE FROM ANY CLAIMS OF INFRINGEMENT, AND YOU ARE RESPONSIBLE
 * FOR OBTAINING ANY RIGHTS YOU MAY REQUIRE FOR YOUR IMPLEMENTATION.
 * XILINX EXPRESSLY DISCLAIMS ANY WARRANTY WHATSOEVER WITH RESPECT TO
 * THE ADEQUACY OF THE IMPLEMENTATION, INCLUDING BUT NOT LIMITED TO
 * ANY WARRANTIES OR REPRESENTATIONS THAT THIS IMPLEMENTATION IS FREE
 * FROM CLAIMS OF INFRINGEMENT, IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 */

/*
 * helloworld.c: simple test application
 */

#include <stdio.h>
#include <unistd.h>
#include "platform.h"

#define FALSE 0
#define TRUE 1

int main()
{
	int sleepyTime = 0, switch1 = 0, switch2 = 0, switch3 = 0;
	int LEDarr[6] = {0};

    init_platform();

    for(;;){
    	if (switch1){
    	    sleepyTime = 100;
    	}
    	else if (switch2){
    	   sleepyTime = 1000;
    	}
    	if (switch3){
    	   sleepyTime = 5000;
    	}

    	LEDarr[0] = TRUE;
    	sleep(sleepyTime);
    	LEDarr[0] = FALSE;
    	LEDarr[1] = TRUE;
    	sleep(sleepyTime);
    	LEDarr[1] = FALSE;
    	LEDarr[2] = TRUE;
    	sleep(sleepyTime);
    	LEDarr[2] = FALSE;
    	LEDarr[3] = TRUE;
    	sleep(sleepyTime);
    	LEDarr[3] = FALSE;
    	LEDarr[4] = TRUE;
    	sleep(sleepyTime);
    	LEDarr[4] = FALSE;
    	LEDarr[5] = TRUE;
    	sleep(sleepyTime);
    	LEDarr[5] = FALSE;

    }

    cleanup_platform();

    return 0;
}
